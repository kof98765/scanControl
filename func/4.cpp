///////////////////////////////////////////////////////////////////////////////
//  File generated by HDevelop for HALCON/C++ Version 10.0
///////////////////////////////////////////////////////////////////////////////



#include "HalconCpp.h"



using namespace Halcon;


#ifndef NO_EXPORT_MAIN
// Main procedure 
void action()
{
  using namespace Halcon;

  // Local iconic variables 
  Hobject  Image, ROI_0, ImageReduced, Region1;
  Hobject  ConnectedRegions1, SelectedRegions, result, ObjectSelected1;
  Hobject  RegionDilation, Contours;


  // Local control variables 
  HTuple  Number, Index, Area, Row, Column;

  read_image(&Image, "D:/halcon_learn/»±œ›/≤‡√Ê/4.png");
  dev_open_window_fit_image(Image, 0, 0, -1, -1, WindowHandle)

  gen_rectangle2(&ROI_0, 369.695, 294.935, HTuple(1.3813).Rad(), 37.0332, 82.0113);
  reduce_domain(Image, ROI_0, &ImageReduced);

  fast_threshold(ImageReduced, &Region1, 110, 176, 20);
  connection(Region1, &ConnectedRegions1);


  select_shape(ConnectedRegions1, &SelectedRegions, "area", "and", 60, 250);

  if (HDevWindowStack::IsOpen())
    set_draw(HDevWindowStack::GetActive(),"margin");

  count_obj(SelectedRegions, &Number);
  gen_empty_region(&result);
  for (Index=1; Index<=Number; Index+=1)
  {
    select_obj(SelectedRegions, &ObjectSelected1, Index);
    area_center(ObjectSelected1, &Area, &Row, &Column);
    dilation_circle(SelectedRegions, &RegionDilation, 3.5);
    gen_contour_region_xld(RegionDilation, &Contours, "border");
    concat_obj(RegionDilation, result, &result);
  }
  if (HDevWindowStack::IsOpen())
    clear_window(HDevWindowStack::GetActive());
  if (HDevWindowStack::IsOpen())
    disp_obj(Image, HDevWindowStack::GetActive());
  if (HDevWindowStack::IsOpen())
    disp_obj(result, HDevWindowStack::GetActive());
}


#ifndef NO_EXPORT_APP_MAIN
int main(int argc, char *argv[])
{
  using namespace Halcon;
  // Default settings used in HDevelop (can be omitted) 
  set_system("do_low_error","false");
  action();
  return 0;
}
#endif


#endif


