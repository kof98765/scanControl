///////////////////////////////////////////////////////////////////////////////
//  File generated by HDevelop for HALCON/C++ Version 10.0
///////////////////////////////////////////////////////////////////////////////



#include "HalconCpp.h"



using namespace Halcon;


#ifndef NO_EXPORT_MAIN
// Main procedure 
void action()
{
  using namespace Halcon;

  // Local iconic variables 
  Hobject  Image, Regions, ConnectedRegions1, Contours3;
  Hobject  SelectedContours, Region, ImageReduced, SelectedContours1;
  Hobject  ObjectSelected, Region2, RegionComplement, Region1;
  Hobject  SelectedRegions1, result, ObjectSelected1, Contours1;


  // Local control variables 
  HTuple  Number1, Index, Number, Index1, Area;
  HTuple  Row, Column;

  ÂÆö‰Ωç
  read_image(&Image, "D:/halcon_learn/»±œ›/’˝√Ê/3.png");
  auto_threshold(Image, &Regions, 1);
  connection(Regions, &ConnectedRegions1);
  gen_contour_region_xld(ConnectedRegions1, &Contours3, "border");
  select_contours_xld(Contours3, &SelectedContours, "contour_length", 900, 1200, 
      -0.5, 0.5);
  gen_region_contour_xld(SelectedContours, &Region, "filled");
  reduce_domain(Image, Region, &ImageReduced);

  select_contours_xld(Contours3, &SelectedContours1, "contour_length", 140, 160, 
      -0.5, 0.5);

  count_obj(SelectedContours1, &Number1);
  for (Index=1; Index<=Number1; Index+=1)
  {
    select_obj(SelectedContours1, &ObjectSelected, Index);
    gen_region_contour_xld(ObjectSelected, &Region2, "filled");
    complement(Region2, &RegionComplement);
    reduce_domain(ImageReduced, RegionComplement, &ImageReduced);
  }


  fast_threshold(ImageReduced, &Region1, 19, 33, 20);
  connection(Region1, &ConnectedRegions1);
  select_shape(ConnectedRegions1, &SelectedRegions1, "area", "and", 12, 18);

  count_obj(SelectedRegions1, &Number);

  gen_empty_obj(&result);
  for (Index1=1; Index1<=Number; Index1+=1)
  {
    select_obj(SelectedRegions1, &ObjectSelected1, Index1);
    area_center(ObjectSelected1, &Area, &Row, &Column);
    dilation_circle(ObjectSelected1, &ObjectSelected1, 3.5);
    gen_contour_region_xld(ObjectSelected1, &Contours1, "border");

    concat_obj(Contours1, result, &result);

  }
  if (HDevWindowStack::IsOpen())
    clear_window(HDevWindowStack::GetActive());
  if (HDevWindowStack::IsOpen())
    disp_obj(Image, HDevWindowStack::GetActive());
  if (HDevWindowStack::IsOpen())
    disp_obj(result, HDevWindowStack::GetActive());



}


#ifndef NO_EXPORT_APP_MAIN
int main(int argc, char *argv[])
{
  using namespace Halcon;
  // Default settings used in HDevelop (can be omitted) 
  set_system("do_low_error","false");
  action();
  return 0;
}
#endif


#endif


